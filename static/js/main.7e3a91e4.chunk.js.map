{"version":3,"sources":["contexts/CardsContext.js","components/CardsProvider.js","components/ListItem.js","components/CardList.js","components/NewCard.js","components/Card.js","components/EditCard.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["CardsContext","createContext","CardsProvider","props","useState","cards","setList","getList","a","fetch","method","response","json","responseList","console","log","useEffect","Provider","value","update","children","ListItem","to","id","className","aria-current","content","moment","Date","created","fromNow","CardList","context","useContext","type","map","item","NewCard","setValue","history","useHistory","htmlFor","onChange","event","target","onClick","body","JSON","stringify","headers","then","push","Card","match","card","setCard","findedCard","params","find","o","Number","alert","EditCard","prevCard","Board","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e3a91e4.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst CardsContext = createContext([]);\nexport default CardsContext;\n","import React, { useState, useEffect } from 'react';\nimport CardsContext from '../contexts/CardsContext';\n\nexport default function CardsProvider(props) {\n  const [cards, setList] = useState([]);\n\n  const getList = async () => {\n    const response = await fetch('https://valerie-sidman-crud-back.herokuapp.com/posts', {\n      method: 'GET'\n    });\n    const responseList = await response.json();\n    setList(responseList);\n\n    console.log('Запросили список карточек на сервере');\n  }\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  return (\n    <CardsContext.Provider value={{ cards: cards, update: getList}}>\n      {props.children}\n    </CardsContext.Provider>\n  )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nexport default function ListItem(props) {\n  return (\n    <Link to={`/posts/${props.id}`} className=\"list-group-item list-group-item-action\" aria-current=\"true\">\n      <div className=\"d-flex w-100 justify-content-between\">\n        <h5 className=\"mb-1\">ID:{props.id}</h5>\n      </div>\n      <p className=\"mb-1\">Content: {props.content}</p>\n      <small>Created: {moment(new Date(props.created)).fromNow()}</small>\n    </Link>\n  )\n}\n","import React, { useContext } from 'react';\nimport ListItem from './ListItem';\nimport CardsContext from '../contexts/CardsContext';\nimport { Link } from 'react-router-dom';\n\nexport default function CardList() {\n  const context = useContext(CardsContext);\n\n  return (\n    <div className=\"cardlist-container\">\n      <Link to=\"/posts/new\">\n        <button type=\"submit\" className=\"btn btn-primary\">New card</button>\n      </Link>\n      <div className=\"list-group\">\n        {\n          context.cards.map((item) => <ListItem key={item.id} id={item.id} created={item.created} content={item.content} />)\n        }\n      </div>\n    </div>\n  )\n}","import React, { useState, useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport CardsContext from '../contexts/CardsContext';\n\nexport default function NewCard() {\n  const [value, setValue] = useState('');\n  const history = useHistory();\n  const context = useContext(CardsContext);\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  }\n\n  const postCard = () => {\n    fetch('https://valerie-sidman-crud-back.herokuapp.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({ \"id\": 0, \"content\": value }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => console.log('Отправили новую карточку на сервер'))\n      .then(() => context.update())\n      .then(() => history.push(\"/\"));\n  }\n\n  return (\n    <div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"newcard-field\" className=\"form-label\">What's new?</label>\n        <input type=\"text\" className=\"form-control\" id=\"newcard-field\" value={value} onChange={handleChange} />\n      </div>\n      <button className=\"btn btn-success\" onClick={postCard}>Add</button>\n      <Link to=\"/\" className=\"btn btn-secondary\">Return</Link>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CardsContext from '../contexts/CardsContext';\nimport moment from 'moment';\n\nexport default function Card({ match }) {\n  const [card, setCard] = useState({});\n  const context = useContext(CardsContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    const findedCard = match.params.id ?\n    context.cards.find(o => o.id === Number(match.params.id)) :\n      alert('ID not found');\n    if (findedCard) {\n      setCard(findedCard);\n    }\n  }, [context, match.params.id]);\n\n  const deleteCard = () => {\n    fetch(`https://valerie-sidman-crud-back.herokuapp.com/posts/${card.id}`, {\n      method: 'DELETE',\n    }).then(() => console.log('Удалили карточку'))\n      .then(() => context.update())\n      .then(() => history.push(\"/\"));\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">Created: {moment(new Date(card.created)).fromNow()}</div>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">ID: {card.id}</h5>\n        <p className=\"card-text\">Content: {card.content}</p>\n        <Link to={`/posts/${card.id}/edit`} className=\"btn btn-warning\">Edit</Link>\n        <button className=\"btn btn-danger\" onClick={deleteCard}>Delete</button>\n        <Link to=\"/\" className=\"btn btn-secondary\">Return</Link>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CardsContext from '../contexts/CardsContext';\n\nexport default function EditCard({ match }) {\n  const [card, setCard] = useState({});\n  const context = useContext(CardsContext);\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    setCard(prevCard => ({ ...prevCard, content: event.target.value }));\n  }\n\n  useEffect(() => {\n    const findedCard = match.params.id ?\n    context.cards.find(o => o.id === Number(match.params.id)) :\n      alert('ID not found');\n    if (findedCard) {\n      setCard(findedCard);\n    } else {\n      alert('Card not found');\n    }\n  }, [context, match.params.id]);\n\n  const postCard = () => {\n    fetch('https://valerie-sidman-crud-back.herokuapp.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({ \"id\": card.id, \"content\": card.content }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => console.log('Изменили карточку и отправили на сервер'))\n      .then(() => context.update())\n      .then(() => history.push(\"/\"));\n  }\n\n  return (\n    <div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"content-field\" className=\"form-label\">Edit your card</label>\n        <input type=\"text\" className=\"form-control\" value={card.content || ''} id=\"content-field\" onChange={handleChange} />\n      </div>\n      <button type=\"submit\" className=\"btn btn-info\" onClick={postCard}>Confirm</button>\n      <Link to={`/posts/${card.id}`} className=\"btn btn-secondary\">Return</Link>\n    </div>\n  )\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CardsProvider from './CardsProvider';\nimport CardList from './CardList';\nimport NewCard from './NewCard';\nimport Card from './Card';\nimport EditCard from './EditCard';\n\nexport default function Board() {\n  return (\n    <CardsProvider>\n      <Router>\n        <div className=\"board-container\">\n          <Switch>\n            <Route path=\"/posts/:id([0-9]+)?/edit\" component={EditCard} />\n            <Route path=\"/posts/new\" component={NewCard} />\n            <Route path=\"/posts/:id([0-9]+)?\" component={Card} />\n            <Route path=\"/\" component={CardList} />\n          </Switch>\n        </div>\n      </Router>\n    </CardsProvider>\n  )\n}\n","import React from 'react';\nimport Board from '../src/components/Board';\n\nexport default function App() {\n    return (\n        <Board />\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}